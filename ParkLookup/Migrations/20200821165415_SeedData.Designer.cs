// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkLookup.Models;

namespace ParkLookup.Migrations
{
    [DbContext(typeof(ParkLookupContext))]
    [Migration("20200821165415_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ParkLookup.Models.NationalPark", b =>
                {
                    b.Property<int>("NationalParkId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("NationalParkCamping");

                    b.Property<bool>("NationalParkFishing");

                    b.Property<string>("NationalParkHighlight");

                    b.Property<bool>("NationalParkHiking");

                    b.Property<string>("NationalParkName");

                    b.Property<string>("NationalParkState");

                    b.HasKey("NationalParkId");

                    b.ToTable("NationalParks");

                    b.HasData(
                        new
                        {
                            NationalParkId = 1,
                            NationalParkCamping = true,
                            NationalParkFishing = true,
                            NationalParkHighlight = "largest mountain in AK",
                            NationalParkHiking = true,
                            NationalParkName = "Denali",
                            NationalParkState = "Alaska"
                        },
                        new
                        {
                            NationalParkId = 2,
                            NationalParkCamping = true,
                            NationalParkFishing = true,
                            NationalParkHighlight = "lodges, big trees",
                            NationalParkHiking = true,
                            NationalParkName = "Olympic",
                            NationalParkState = "Washington"
                        },
                        new
                        {
                            NationalParkId = 3,
                            NationalParkCamping = true,
                            NationalParkFishing = false,
                            NationalParkHighlight = "lake",
                            NationalParkHiking = false,
                            NationalParkName = "Crater Lake",
                            NationalParkState = "Oregon"
                        },
                        new
                        {
                            NationalParkId = 4,
                            NationalParkCamping = true,
                            NationalParkFishing = false,
                            NationalParkHighlight = "volcano",
                            NationalParkHiking = true,
                            NationalParkName = "Mt St Helens",
                            NationalParkState = "Washington"
                        },
                        new
                        {
                            NationalParkId = 5,
                            NationalParkCamping = true,
                            NationalParkFishing = false,
                            NationalParkHighlight = "geothermal",
                            NationalParkHiking = true,
                            NationalParkName = "Yellowstone National Park",
                            NationalParkState = "Idaho"
                        });
                });

            modelBuilder.Entity("ParkLookup.Models.StatePark", b =>
                {
                    b.Property<int>("StateParkId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("StateParkCamping");

                    b.Property<bool>("StateParkFishing");

                    b.Property<string>("StateParkHighlight");

                    b.Property<bool>("StateParkHiking");

                    b.Property<string>("StateParkName");

                    b.Property<string>("StateParkState");

                    b.HasKey("StateParkId");

                    b.ToTable("StateParks");

                    b.HasData(
                        new
                        {
                            StateParkId = 1,
                            StateParkCamping = true,
                            StateParkFishing = true,
                            StateParkHighlight = "grizzly bears",
                            StateParkHiking = true,
                            StateParkName = "Chugach",
                            StateParkState = "Alaska"
                        },
                        new
                        {
                            StateParkId = 2,
                            StateParkCamping = true,
                            StateParkFishing = false,
                            StateParkHighlight = "waterfalls",
                            StateParkHiking = true,
                            StateParkName = "Silver Falls",
                            StateParkState = "Oregon"
                        },
                        new
                        {
                            StateParkId = 3,
                            StateParkCamping = true,
                            StateParkFishing = true,
                            StateParkHighlight = "geothermal",
                            StateParkHiking = false,
                            StateParkName = "Harriman",
                            StateParkState = "Idaho"
                        },
                        new
                        {
                            StateParkId = 4,
                            StateParkCamping = true,
                            StateParkFishing = true,
                            StateParkHighlight = "military bunker",
                            StateParkHiking = false,
                            StateParkName = "Fort Flagler",
                            StateParkState = "Washington"
                        },
                        new
                        {
                            StateParkId = 5,
                            StateParkCamping = true,
                            StateParkFishing = false,
                            StateParkHighlight = "climbing",
                            StateParkHiking = true,
                            StateParkName = "Smith Rock",
                            StateParkState = "Oregon"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
